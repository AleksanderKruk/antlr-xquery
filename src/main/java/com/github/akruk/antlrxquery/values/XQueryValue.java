package com.github.akruk.antlrxquery.values;

import java.math.BigDecimal;
import java.util.List;
import org.antlr.v4.runtime.tree.ParseTree;

import com.github.akruk.antlrxquery.exceptions.XQueryUnsupportedOperation;

public interface XQueryValue {
    public XQueryValue copy();
    public XQueryValue empty();
    public ParseTree node();
    public BigDecimal numericValue();
    public String stringValue();
    public Boolean booleanValue();
    public Boolean effectiveBooleanValue();
    public List<XQueryValue> sequence();
    public XQueryValue reference();
    public boolean isNumericValue();
    public boolean isStringValue();
    public boolean isBooleanValue();
    public boolean isSequence();
    public boolean isReference();
    public boolean isAtomic();
    public boolean isNode();
    public List<XQueryValue> atomize();
    public XQueryValue not() throws XQueryUnsupportedOperation;
    public XQueryValue and(XQueryValue other) throws XQueryUnsupportedOperation;
    public XQueryValue or(XQueryValue other) throws XQueryUnsupportedOperation;
    public XQueryValue add(XQueryValue other) throws XQueryUnsupportedOperation;
    public XQueryValue subtract(XQueryValue other) throws XQueryUnsupportedOperation;
    public XQueryValue multiply(XQueryValue other) throws XQueryUnsupportedOperation;
    public XQueryValue divide(XQueryValue other) throws XQueryUnsupportedOperation;
    public XQueryValue integerDivide(XQueryValue other) throws XQueryUnsupportedOperation;
    public XQueryValue modulus(XQueryValue other) throws XQueryUnsupportedOperation;
    public XQueryValue concatenate(XQueryValue other) throws XQueryUnsupportedOperation;
    public XQueryValue valueEqual(XQueryValue other);
    public XQueryValue valueUnequal(XQueryValue other);
    public XQueryValue valueLessThan(XQueryValue other);
    public XQueryValue valueLessEqual(XQueryValue other);
    public XQueryValue valueGreaterThan(XQueryValue other);
    public XQueryValue valueGreaterEqual(XQueryValue other);
    public XQueryValue generalEqual(XQueryValue other);
    public XQueryValue generalUnequal(XQueryValue other);
    public XQueryValue generalLessThan(XQueryValue other);
    public XQueryValue generalLessEqual(XQueryValue other);
    public XQueryValue generalGreaterThan(XQueryValue other);
    public XQueryValue generalGreaterEqual(XQueryValue other);
    public XQueryValue union(XQueryValue otherSequence) throws XQueryUnsupportedOperation;
    public XQueryValue intersect(XQueryValue otherSequence) throws XQueryUnsupportedOperation;
    public XQueryValue except(XQueryValue other) throws XQueryUnsupportedOperation;
    public XQueryValue head() throws XQueryUnsupportedOperation;
    public XQueryValue tail() throws XQueryUnsupportedOperation;
    public XQueryValue insertBefore(XQueryValue position, XQueryValue inserted) throws XQueryUnsupportedOperation;
    public XQueryValue insertAfter(XQueryValue position, XQueryValue inserted) throws XQueryUnsupportedOperation;
    public XQueryValue remove(XQueryValue position) throws XQueryUnsupportedOperation;
    public XQueryValue reverse() throws XQueryUnsupportedOperation;
    public XQueryValue subsequence(int startingLoc) throws XQueryUnsupportedOperation;
    public XQueryValue subsequence(int startingLoc, int length) throws XQueryUnsupportedOperation;
    public XQueryValue distinctValues() throws XQueryUnsupportedOperation;
    public XQueryValue zeroOrOne() throws XQueryUnsupportedOperation;
    public XQueryValue oneOrMore() throws XQueryUnsupportedOperation;
    public XQueryValue exactlyOne() throws XQueryUnsupportedOperation;
    public XQueryValue data() throws XQueryUnsupportedOperation;
    public XQueryValue contains(XQueryValue other) throws XQueryUnsupportedOperation;
    public XQueryValue startsWith(XQueryValue other) throws XQueryUnsupportedOperation;
    public XQueryValue endsWith(XQueryValue other) throws XQueryUnsupportedOperation;
    public XQueryValue uppercase() throws XQueryUnsupportedOperation;
    public XQueryValue lowercase() throws XQueryUnsupportedOperation;
    public XQueryValue substring(int startingLoc) throws XQueryUnsupportedOperation;
    public XQueryValue substring(int startingLoc, int length) throws XQueryUnsupportedOperation;
    public XQueryValue substringBefore(XQueryValue splitstring) throws XQueryUnsupportedOperation;
    public XQueryValue substringAfter(XQueryValue splitstring) throws XQueryUnsupportedOperation;
}
